<?php
/**
 * @file
 * Functional test to see if we can create a node.
 */
class LabroutesNodeTests extends DrupalWebTestCase {

  /**
  * Controls info displayed about our test in the Drupal Testing UI
  */
  public static function getInfo() {
    return array(
      // Name your tests.
      'name' => 'Labroute Node Tests',
      // Describe the point of these tests.
      'description' => 'Tests creating a node.',
      // Assign these tests to a group, just like the "package" in the module's info page puts your modules into a group.
      'group' => 'Epicodus Examples Tests',
    );
  }

  public function setUp() {
    parent::setUp(array('labroutes'));

    $user = $this->drupalCreateAdminUser();
    $this->drupalLogin($user);
    $this->createTestingPage();
  }

  public function createTestingPage() {
    //$info = the information needed to create the basic page at the url `pagetest`.
    $info = array();
    $info['title'] = "Testing!";
    $info["body[und][0][value]"] = "1, 2, 3!";

    //save the new page
    $this->drupalPost('node/add/page', $info, t('Save'));

    //set new page to the correct path. We know this will be node/1 because we are starting from scratch.
    $path['source'] = 'node/1';
    $path['alias'] = 'pagetest';
    path_save($path);
  }

  public function drupalCreateAdminUser(array $permissions = array()) {
    $roles = user_roles();
    $index = array_search('administrator', $roles);
    $user = $this->drupalCreateUser($permissions);
    $user->roles[$index] = 'administrator';
    return user_save($user);
  }

  public function testNewPage() {
    // Navigate to /pagetest.
    $this->drupalGet('pagetest');
    // Verify that the text "1, 2, 3!", exists on the page.
    $this->assertText("1, 2, 3!", 'The text on the page is correct. Hoorah!');
  }

}
